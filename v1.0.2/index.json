{
  "Benjamin.Pizza.DocTest.DocTest.html": {
    "href": "Benjamin.Pizza.DocTest.DocTest.html",
    "title": "Class DocTest | Benjamin.Pizza.DocTest",
    "keywords": "Class DocTest A doctest. Inheritance object DocTest Inherited Members object.GetType() object.MemberwiseClone() object.Equals(object) object.Equals(object, object) object.ReferenceEquals(object, object) object.GetHashCode() Declaration public class DocTest Examples Console.WriteLine(\"Hello world\"); // Output: // Hello world Constructors DocTest(string, string, Script) Constructor. Declaration public DocTest(string name, string code, Script preamble) Parameters Type Name Description string name The name of the test. string code The test's code. Script preamble Code to prepend to the code. Methods Run() Run the test. Declaration public Task Run() Returns Type Description Task A task. ToString() ToString. Declaration public override string ToString() Returns Type Description string A string. Overrides object.ToString()"
  },
  "Benjamin.Pizza.DocTest.DocTestDataAttribute.html": {
    "href": "Benjamin.Pizza.DocTest.DocTestDataAttribute.html",
    "title": "Class DocTestDataAttribute | Benjamin.Pizza.DocTest",
    "keywords": "Class DocTestDataAttribute A Xunit.Sdk.DataAttribute for doctests. Inheritance object Attribute DataAttribute DocTestDataAttribute Inherited Members DataAttribute.Skip Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.Equals(object) Attribute.GetHashCode() Attribute.Match(object) Attribute.IsDefaultAttribute() Attribute.TypeId object.GetType() object.ToString() object.Equals(object, object) object.ReferenceEquals(object, object) Declaration public sealed class DocTestDataAttribute : DataAttribute Constructors DocTestDataAttribute(Type) Constructor. Declaration public DocTestDataAttribute(Type typeInAssemblyToDoctest) Parameters Type Name Description Type typeInAssemblyToDoctest A type in the target assembly. Properties Preamble Code to inject into each doctest script. Declaration public string? Preamble { get; set; } Property Value Type Description string TypeInAssemblyToDoctest A type (any type) in the assembly whose documentation you want to test. Declaration public Type TypeInAssemblyToDoctest { get; } Property Value Type Description Type Methods GetData(MethodInfo) Returns the data to be used to test the theory. Declaration public override IEnumerable<object[]> GetData(MethodInfo testMethod) Parameters Type Name Description MethodInfo testMethod The method that is being tested Returns Type Description IEnumerable<object[]> One or more sets of theory data. Each invocation of the test method is represented by a single object array. Overrides DataAttribute.GetData(MethodInfo)"
  },
  "Benjamin.Pizza.DocTest.html": {
    "href": "Benjamin.Pizza.DocTest.html",
    "title": "Namespace Benjamin.Pizza.DocTest | Benjamin.Pizza.DocTest",
    "keywords": "Namespace Benjamin.Pizza.DocTest Classes DocTest A doctest. DocTestDataAttribute A Xunit.Sdk.DataAttribute for doctests."
  },
  "index.html": {
    "href": "index.html",
    "title": "Page Redirection",
    "keywords": ""
  }
}